/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _TestStruct {
    pb_callback_t testString;
    pb_callback_t testRepeatedInt;
} TestStruct;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TestStruct_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define TestStruct_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define TestStruct_testString_tag                1
#define TestStruct_testRepeatedInt_tag           2

/* Struct field encoding specification for nanopb */
#define TestStruct_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   testString,        1) \
X(a, CALLBACK, REPEATED, INT32,    testRepeatedInt,   2)
#define TestStruct_CALLBACK pb_default_field_callback
#define TestStruct_DEFAULT NULL

extern const pb_msgdesc_t TestStruct_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TestStruct_fields &TestStruct_msg

/* Maximum encoded size of messages (where known) */
/* TestStruct_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
